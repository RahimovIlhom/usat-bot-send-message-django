import httpx

from .serializers import CreateTelegramUserSerializer
from environs import Env

env = Env()
env.read_env()

token = env.str("BOT_TOKEN")

MESSAGES = {
    'uz': {
        'DRAFT': "‚ö†Ô∏è Arizangiz qoralama holatida. Iltimos, tekshirib, arizangizni yuboring.",
        'SUBMITTED': "‚òëÔ∏è Arizangiz tekshirishga yuborildi. Iltimos, tasdiqlanishini kuting.",
        'REJECTED': "‚ùå Arizangiz rad etildi. Iltimos, kiritilgan ma'lumotlarni tekshirib, arizangizni qaytadan yuboring.",
        'ACCEPTED': "‚úÖ Arizangiz qabul qilindi. Quyidagi \"üßë‚Äçüíª Imtihon topshirish\" tugmasini bosib, imtihon topshirishingiz mumkin!",
        'EXAMINED': "üîÑ Imtihon topshirildi. Iltimos, natijasini kuting.",
        'FAILED': "üòî Afsuski imtihondan o'ta olmadingiz. Sizga yana bir imkoniyat beriladi. Buning uchun quyidagi \"üßë‚Äçüíª Imtihon topshirish\" tugmasini bosing.",
        'PASSED': "ü•≥ Tabriklaymiz! Siz Fan va texnologiyalar universitetiga tavsiya etildingiz. Quyidagi \"üì• Shartnomani olish\" tugmasi orqali shartnomani yuklab olishingiz mumkin.",
    },
    'ru': {
        'DRAFT': "‚ö†Ô∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É.",
        'SUBMITTED': "‚òëÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        'REJECTED': "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.",
        'ACCEPTED': "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"üßë‚Äçüíª –°–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω\" –Ω–∏–∂–µ!",
        'EXAMINED': "üîÑ –≠–∫–∑–∞–º–µ–Ω —Å–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
        'FAILED': "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —ç–∫–∑–∞–º–µ–Ω. –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –µ—â–µ –æ–¥–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"üßë‚Äçüíª –°–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω\" –Ω–∏–∂–µ.",
        'PASSED': "ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ã –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"üì• –ü–æ–ª—É—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä\" –Ω–∏–∂–µ.",
    },
    'en': {
        'DRAFT': "‚ö†Ô∏è Your application is in draft status. Please review and submit your application.",
        'SUBMITTED': "‚òëÔ∏è Your application has been submitted for review. Please wait for confirmation.",
        'REJECTED': "‚ùå Your application was rejected. Please check the entered information and resubmit your application.",
        'ACCEPTED': "‚úÖ Your application has been accepted. You can take the exam by clicking the \"üßë‚Äçüíª Take the exam\" button below!",
        'EXAMINED': "üîÑ The exam has been taken. Please wait for the results.",
        'FAILED': "üòî Unfortunately, you did not pass the exam. You will be given another opportunity. To do this, click the \"üßë‚Äçüíª Take the exam\" button below.",
        'PASSED': "ü•≥ Congratulations! You have been recommended to the University of Science and Technology. You can download the contract by clicking the \"üì• Get the contract\" button below.",
    }
}


async def send_message_via_tg_api(telegram_user: CreateTelegramUserSerializer):
    tg_id = telegram_user.validated_data['tg_id']
    status = telegram_user.validated_data['status']
    lang = telegram_user.validated_data.get('lang', 'uz')

    text = MESSAGES.get(lang, {}).get(status, "Unknown status")
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    params = {
        'chat_id': tg_id,
        'text': text
    }
    async with httpx.AsyncClient() as client:
        response = await client.get(url, params=params)

    if response.status_code == 200:
        return {"message": "Message sent successfully"}
    else:
        return {"message": "Failed to send message", "details": response.json()}
