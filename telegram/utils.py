import httpx

from utils.apis import send_exam_result
from .serializers import CreateTelegramUserSerializer
from environs import Env

from utils.loader import db_bot as db

env = Env()
env.read_env()

token = env.str("BOT_TOKEN")

MESSAGES = {
    'uz': {
        'DRAFT': "‚ö†Ô∏è Arizangiz qoralama holatida. Iltimos, tekshirib, arizangizni yuboring.",
        'SUBMITTED': "‚òëÔ∏è Arizangiz tekshirishga yuborildi. Iltimos, tasdiqlanishini kuting.",
        'REJECTED': "‚ùå Arizangiz rad etildi. Iltimos, kiritilgan ma'lumotlarni tekshirib, arizangizni qaytadan yuboring.",
        'ACCEPTED': "‚úÖ Arizangiz qabul qilindi. Quyidagi \"üßë‚Äçüíª Imtihon topshirish\" tugmasini bosib, imtihon topshirishingiz mumkin!",
        'EXAMINED': "üîÑ Imtihon topshirilgan. Iltimos, natijasini kuting.",
        'FAILED': "üòî Afsuski imtihondan o'ta olmadingiz. Sizga yana bir imkoniyat beriladi. Buning uchun quyidagi \"üßë‚Äçüíª Imtihon topshirish\" tugmasini bosing.",
        'PASSED': "ü•≥ Tabriklaymiz! Siz Fan va texnologiyalar universitetiga tavsiya etildingiz. Shartnomani https://qabul.usat.uz saytidagi shaxsiy kabinetdan yuklab olishingiz mumkin. Saytga kirish uchun parol sizga SMS xabar sifatida yuborilgan. Savollaringiz bo‚Äôlsa bizga qo‚Äông‚Äôiroq qiling: 78-888-38-88",
        'PASSED_DTM': "ü•≥ Tabriklaymiz, siz imtihonsiz, UZBMB (DTM) natijangiz asosida Fan va texnologiyalar universitetiga talabalikka tavsiya etildingiz! Shartnomani https://qabul.usat.uz saytidagi shaxsiy kabinetdan yuklab olishingiz mumkin. Saytga kirish uchun parol sizga SMS xabar sifatida yuborilgan. Savollaringiz bo‚Äôlsa bizga qo‚Äông‚Äôiroq qiling: 78-888-38-88",
    },
    'ru': {
        'DRAFT': "‚ö†Ô∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É.",
        'SUBMITTED': "‚òëÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
        'REJECTED': "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.",
        'ACCEPTED': "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"üßë‚Äçüíª –°–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω\" –Ω–∏–∂–µ!",
        'EXAMINED': "üîÑ –≠–∫–∑–∞–º–µ–Ω —Å–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
        'FAILED': "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —ç–∫–∑–∞–º–µ–Ω. –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –µ—â–µ –æ–¥–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"üßë‚Äçüíª –°–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω\" –Ω–∏–∂–µ.",
        'PASSED': "ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ã –∫ –∑–∞—á–∏—Å–ª–µ–Ω–∏—é –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–∑ –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ https://qabul.usat.uz. –ü–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ SMS. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: 78-888-38-88",
        'PASSED_DTM': "ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —ç–∫–∑–∞–º–µ–Ω! –ù–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ UZBMB (DTM) –≤—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ã –∫ –∑–∞—á–∏—Å–ª–µ–Ω–∏—é –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ —Å–∞–π—Ç–µ https://qabul.usat.uz –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –ü–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ SMS. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: 78-888-38-88",

    },
    'en': {
        'DRAFT': "‚ö†Ô∏è Your application is in draft status. Please review and submit your application.",
        'SUBMITTED': "‚òëÔ∏è Your application has been submitted for review. Please wait for confirmation.",
        'REJECTED': "‚ùå Your application was rejected. Please check the entered information and resubmit your application.",
        'ACCEPTED': "‚úÖ Your application has been accepted. You can take the exam by clicking the \"üßë‚Äçüíª Take the exam\" button below!",
        'EXAMINED': "üîÑ The exam has been submitted. Please wait for the results.",
        'FAILED': "üòî Unfortunately, you did not pass the exam. You will be given another opportunity. To do this, click the \"üßë‚Äçüíª Take the exam\" button below.",
        'PASSED': "ü•≥ Congratulations! You have been recommended for admission to the University of Science and Technology. You can download the contract from your personal account on the website https://qabul.usat.uz. The password to access the site has been sent to you via SMS. If you have any questions, please call us at: 78-888-38-88",
        'PASSED_DTM': "ü•≥ Congratulations, you have passed the exam! Based on your UZBMB (DTM) results, you have been recommended for admission to the University of Science and Technology. You can download the contract from your personal account on the website https://qabul.usat.uz. The password to access the site has been sent to you via SMS. If you have any questions, please call us at: 78-888-38-88",
    }
}


async def send_message_via_tg_api(telegram_user: CreateTelegramUserSerializer):
    tg_id = telegram_user.validated_data['tg_id']
    status = telegram_user.validated_data['status']
    lang = telegram_user.validated_data.get('lang', 'uz')

    text = get_message_text(tg_id, lang, status)
    if text is None:
        return
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    params = {
        'chat_id': tg_id,
        'text': text
    }
    async with httpx.AsyncClient() as client:
        response = await client.get(url, params=params)

    if response.status_code == 200:
        return {"message": "Message sent successfully"}
    else:
        return {"message": "Failed to send message", "details": response.json()}


def get_message_text(tgId, lang, status):
    applicant = db.get_application_status(tgId)

    if applicant:
        db.update_application_status(tgId, status)

        if status == 'PASSED' and applicant['status'] == 'SUBMITTED':
            status = 'PASSED_DTM'
        elif status == 'ACCEPTED' and applicant['status'] == 'EXAMINED':
            exam_result = db.get_exam_result(tgId)
            if exam_result:
                send_exam_result(tgId, str(exam_result['totalScore']))
                status = 'EXAMINED'
                db.update_application_status(tgId, status)
                return None

    return MESSAGES.get(lang, {}).get(status, "Unknown status")

